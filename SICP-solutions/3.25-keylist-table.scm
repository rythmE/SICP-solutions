(load "2/2.54-equal.scm")

(define (make-table)
	(let ((local-table (list '*table*)))
		(define (lookup keys)
			(define (inner-lookup keylist table)
				(let ((subtable (assoc (car keylist) (cdr table))))
					(if subtable
							(if (null? (cdr keylist))
									(cdr subtable)
									(inner-lookup (cdr keylist) subtable))
							false)))
			(inner-lookup keys local-table))
		(define (insert! keys value)
			(define (inner-insert! keylist table value)
				(let ((subtable (assoc (car keylist) (cdr table))))
					(if subtable
							(if (null? (cdr keylist))
									(set-cdr! subtable value)
									(inner-insert! (cdr keylist) subtable value))
							(set-cdr! table
												(cons (key-table keylist value)
															(cdr table))))))
			(inner-insert! keys local-table value))
		(define (key-table keylist value)
			(if (null? (cdr keylist))
					(cons (car keylist) value)
					(list (car keylist) (key-table (cdr keylist) value))))
		(define (accoc key records)
			(cond ((null? records) false)
						((equal? key (caar records)) (car records))
						(else (assoc key (cdr records)))))
		(define (dispatch m)
			(cond ((eq? m 'lookup-proc) lookup)
						((eq? m 'insert-proc!) insert!)
						(else (error "Unknown operation -- TABLE" m))))
		dispatch))
		
(define (insert! keys value table)
	((table 'insert-proc!) keys value))
		
(define (lookup keys table)
	((table 'lookup-proc) keys))